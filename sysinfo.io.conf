server {
  #listen 80;
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name sysinfo.io;

  include /etc/nginx/h5bp/basic.conf;
  include /etc/nginx/h5bp/directive-only/ssl.conf;
  include fastcgi_params;

  	ssl	on;
	ssl_certificate_key /etc/letsencrypt/live/sysinfo.io-0001/privkey.pem;
	ssl_certificate /etc/letsencrypt/live/sysinfo.io-0001/fullchain.pem;
	ssl_client_certificate /etc/nginx/ssl/origin-pull-ca.pem;
	ssl_verify_client on;

	access_log   /var/log/nginx/sysinfo.io.access.log main_ext;
	error_log    /var/log/nginx/sysinfo.io.error.log warn;

	root /var/www/sysinfo.io;
	expires 7d; # default cache expires in 7 days
	index index.php /_h5ai/public/index.php;

	real_ip_recursive  on;

        set $skip_cache 0;

        if ($request_method !~ ^(GET|HEAD)$) {
            set $skip_cache 1;
        }

        # if ($query_string) {
        # set $skip_cache 1;
        # }

        # no cache uris containing the following segments
        if ($request_uri ~* "/wp-admin/|/wp-login.php|/feed/|index.php|sitemap(_index)?.xml|/scripts/|/phpscripts/") {set $skip_cache 1;}

        # no cache for logged in users or recent commenters
        if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in_*") {set $skip_cache 1;}

	location ~ [A-Z] {
        rewrite ^(.*)$ $scheme://$host$uri_lowercase;
	}

	location / {
		try_files $uri $uri/ /index.php?$args;
	}


	# Normally you do not need this if you are not using any error_page directive
	# but having it off allows Wordpress to return it's own error page
	# rather than the plain Nginx screen
 
	fastcgi_intercept_errors off;

	location ^~ /phpscripts/ {
		include allowed_ips.conf;
                deny all;
                error_page 403 = @wp_admin_ban;
		fastcgi_cache_bypass 1;
                fastcgi_pass sysinfo_phpfpm;
}

#	location ~* /(?:wp-admin|wp-login)/.*\.php$ {}
#	location ~ ^/(wp-admin|wp-login)*\.php$ {}
#	location ~ /(wp-admin/|wp-login\.php)$ {}
#	location ~ /(wp-login.php|wp-admin/*)$ {}
#	location ~ /(wp-login.php|wp-admin)/.* {}
#	location ~ /(wp-login.php|wp-admin.*) {}
#	location ~ /(wp-admin\/|wp-login\.php) {}

	location ~ \.php$ {
		try_files $uri =404;
		# HTTP response header "X-Nginx-Cache" = HIT/MISS/BYPASS/EXPIRED
		add_header X-Nginx-Cache $upstream_cache_status;
		add_header X-Nginx-CacheSkip $skip_cache;
		fastcgi_cache WORDPRESS;
		fastcgi_cache_bypass $skip_cache;
	        fastcgi_no_cache $skip_cache;
		fastcgi_pass sysinfo_phpfpm;
		# fastcgi_pass unix:/run/php7/php-fpm.sock;

		location ~ ^/(wp-admin|wp-login\.php) {
			include allowed_ips.conf;
   			deny all;
			add_header Cache-Control no-cache;
			#expires -1;
			set $skip_cache 1;
			error_page 403 = @wp_admin_ban;
			fastcgi_cache WORDPRESS;
			fastcgi_cache_bypass $skip_cache;
			fastcgi_no_cache $skip_cache;
			fastcgi_pass sysinfo_phpfpm;
		}
	}

#	location ~ \.(jsp|asp|aspx|cgi)$ {
#		return 410;
#}

# Rewrite locations for old Wordpress post aliases
	location /verizon-samsung-galaxy-s7-firmware-download {
		return 301 https://sysinfo.io/official-samsung-galaxy-s7-usa-stock-rom-firmware-download/;
}

	# Rewrites for Yoast sitemap
	rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
	rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;

	# Rewrite the base sitemap.xml generated by JetPack
	#rewrite ^/sitemap.xml$ /index.php?sitemap=1 last;

	rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
	rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
	rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
	rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;

  # permalink change from year/mo/day/post to /post
  rewrite "/([0-9]{4})/([0-9]{2})/([0-9]{2})/(.*)" $scheme://$server_name/$4 permanent;

	location ~ /fastcgipurge(/.*) {
		include allowed_ips.conf;
		deny all;
		fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
}

#	location ~ ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|txt|pub|sh)$ {
#		access_log off;
#		log_not_found off;
#		expires 30d;
#}

	location ~ /(media|images|cache|tmp|logs)/.*.(php|jsp|pl|py|asp|cgi|sh)$ {
  		return 403;
}

#location ^~ /winscripts/{ rewrite ^(.*)$ $scheme://$host/scripts/wintel/$2; }

#location ^~ /winscripts/{
#   alias /mnt/windows/dfs/visualblind.2/Documents/Scripts/windows/;
#   allow all;
#   autoindex on;
#        types  { }
#   text/plain sh bat txt ps1;
#        default_type text/plain;
#}

#location ^~ /scripts/000_Click4WindowsScripts{
#rewrite ^.* https://sysinfo.io/winscripts/ permanent;
#}

location ^~ /dfs/{
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;
    allow all;
    autoindex off;
#    types {
#	text/plain sh bat txt ps1 ini;
#	video/mp4 mp4;
# }
}

location /scripts/amp {
    return 301 https://sysinfo.io/scripts/;
}

location ^~ /.well-known/acme-challenge/ {
    # Set correct content type. According to this:
    # https://community.letsencrypt.org/t/using-the-webroot-domain-verification-method/1445/29
    # Current specification requires "text/plain" or no content header at all.
    # It seems that "text/plain" is a safe option.
    default_type "text/plain";
#    allow all; #TR when renewing cert change to allow all
    deny all;
    # This directory must be the same as in /etc/letsencrypt/cli.ini
    # as "webroot-path" parameter. Also don't forget to set "authenticator" parameter
    # there to "webroot".
    # Do NOT use alias, use root! Target directory is located here:
    # /var/www/common/letsencrypt/.well-known/acme-challenge/
    #
    root         /var/www/letsencrypt;
}

	location /wp-admin/admin-ajax.php {
	allow all;
	}

location @wp_admin_ban {
# rewrite ^(.*) https://rrrgggbbb.com/ permanent;
return 307 https://sysinfo.io;
}

}
