fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=WORDPRESS:100m inactive=480m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

# Redirect www to non-www
server {
  listen 80;
  listen [::]:80;
  listen [::]:443;
  listen 443;
  server_name www.travisrunyard.com;
  # Include defaults for allowed SSL/TLS protocols and handshake caches.
  include /etc/nginx/h5bp/directive-only/ssl.conf;
  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
  ssl on;
  ssl_certificate_key /etc/ssl/letsencrypt/travisrunyard.com/privkey.pem;
  ssl_certificate /etc/ssl/letsencrypt/travisrunyard.com/fullchain.pem;

  return 301 https://travisrunyard.com$request_uri;
}

server {
  listen 80;
  listen 443 http2;
  server_name travisrunyard.com *.travisrunyard.com;
  # Include defaults for allowed SSL/TLS protocols and handshake caches.
  include /etc/nginx/h5bp/directive-only/ssl.conf;
  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
  ssl on;
  ssl_certificate_key /etc/ssl/letsencrypt/travisrunyard.com/privkey.pem;
  ssl_certificate /etc/ssl/letsencrypt/travisrunyard.com/fullchain.pem;
	server_name travisrunyard.com *.travisrunyard.com;

	access_log   /var/log/nginx/travisrunyard.com.access.log;
	error_log    /var/log/nginx/travisrunyard.com.error.log;

	root /var/www/travisrunyard.com;
	index index.php;

	set $skip_cache 0;

	# POST requests and urls with a query string should always go to PHP
	if ($request_method = POST) {
		set $skip_cache 1;
	}
	if ($query_string != "") {
		set $skip_cache 1;
	}

	# Don't cache uris containing the following segments
	if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
		set $skip_cache 1;
	}

	# Don't use the cache for logged in users or recent commenters
	if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
		set $skip_cache 1;
	}

	location / {
		try_files $uri $uri/ /index.php?$args;
	}

	location ~ \.php$ {
		try_files $uri =404;
		include fastcgi_params;
		fastcgi_pass 127.0.0.1:9000;

		fastcgi_cache_bypass $skip_cache;
	  fastcgi_no_cache $skip_cache;

		fastcgi_cache WORDPRESS;
		fastcgi_cache_valid  480m;
	}

  # Rewrites for Yoast SEO XML Sitemap
  rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
  rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;

  #TR Rewrite the base sitemap.xml generated by JetPack
  rewrite ^/sitemap.xml$ /index.php?sitemap=1 last;

  #TR Rewrite rule permalink change from year/mo/day/post to just /post
  rewrite "/([0-9]{4})/([0-9]{2})/([0-9]{2})/(.*)" $scheme://$server_name/$4 permanent;

	location ~ /purge(/.*) {
	    fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
	}

	location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|txt|pub)$ {
		access_log off;	log_not_found off; expires max;
	}

	location = /robots.txt { access_log off; log_not_found off; }
	location ~ /\. { deny  all; access_log off; log_not_found off; }
}
