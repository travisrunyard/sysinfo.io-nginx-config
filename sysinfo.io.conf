# Redirect www to non-www
server {
  listen 80;
  listen [::]:443 ssl;
  listen 443 ssl;
  server_name www.sysinfo.io;

  # Include defaults for allowed SSL/TLS protocols and handshake caches.
   include /etc/nginx/h5bp/directive-only/ssl.conf;

  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping

  #  add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";
  #  add_header Strict-Transport-Security "max-age=31536000;";

  ssl on;
 # ssl_certificate_key /etc/ssl/letsencrypt/sysinfo.io/privkey.pem;
 # ssl_certificate /etc/ssl/letsencrypt/sysinfo.io/fullchain.pem;

  ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  ssl_certificate /etc/nginx/ssl/fullchain.pem;

  return 301 https://sysinfo.io$request_uri;
}

server {
  listen 80;
  listen [::]:443 ssl;
  listen 443 ssl;
  server_name sysinfo.io;

  include /etc/nginx/h5bp/basic.conf;

  # Include defaults for allowed SSL/TLS protocols and handshake caches.
  include /etc/nginx/h5bp/directive-only/ssl.conf;
  # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
  # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
  # add_header Strict-Transport-Security "max-age=31536000;";
  
  ssl on;
  #ssl_certificate_key /etc/ssl/letsencrypt/sysinfo.io/privkey.pem;
  #ssl_certificate /etc/ssl/letsencrypt/sysinfo.io/fullchain.pem;

  ssl_certificate_key /etc/nginx/ssl/privkey.pem;
  ssl_certificate /etc/nginx/ssl/fullchain.pem;

	access_log   /var/log/nginx/sysinfo.io.access.log;
	error_log    /var/log/nginx/sysinfo.io.error.log;

	root /var/www/sysinfo.io;
	expires 7d;
	index index.php;

	set $skip_cache 0;

	# POST requests and urls with a query string should always go to PHP
	if ($request_method = POST) {
		set $skip_cache 1;
	}

         if ($query_string != "") {
         set $skip_cache 1;
         }

        # Don't cache uris containing the following segments
        if ($request_uri ~ "/wp-admin/*|/wp-login.php|/feed/|index.php|sitemap(_index)?.xml|/scripts/") {
                set $skip_cache 1;
        }
	# Don't use the cache for logged in users or recent commenters
	if ($http_cookie ~ "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in_*") {
		set $skip_cache 1;
	}
	location / {
		try_files $uri $uri/ /index.php?$args;
	}
	location ~* \.php$ {
		try_files $uri =404; #This closes a big security
		add_header X-Nginx-Cache $upstream_cache_status;
		fastcgi_cache_bypass $skip_cache;
	        fastcgi_no_cache $skip_cache;
		fastcgi_cache WORDPRESS;
		include /etc/nginx/fastcgi_params;
		fastcgi_pass sysinfo_phpfpm;
		access_log /var/log/nginx/phpfpmonly-access.log;
	}

location ~ \.(vbs|jsp|asp|aspx|cgi)$ {
    return 410;
}

location ~ /verizon-samsung-galaxy-s7-firmware-download/ {
return 301 https://sysinfo.io/official-samsung-galaxy-s7-usa-stock-rom-firmware-download/;
}

  # Rewrites for Yoast SEO XML Sitemap
  rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;
  rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;

  #TR Rewrite the base sitemap.xml generated by JetPack
#  rewrite ^/sitemap.xml$ /index.php?sitemap=1 last;

rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml$ "/index.php?xml_sitemap=params=$2" last;
rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.xml\.gz$ "/index.php?xml_sitemap=params=$2;zip=true" last;
rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html$ "/index.php?xml_sitemap=params=$2;html=true" last;
rewrite ^/sitemap(-+([a-zA-Z0-9_-]+))?\.html.gz$ "/index.php?xml_sitemap=params=$2;html=true;zip=true" last;

  #TR Rewrite rule permalink change from year/mo/day/post to just /post
  rewrite "/([0-9]{4})/([0-9]{2})/([0-9]{2})/(.*)" $scheme://$server_name/$4 permanent;

	location ~ /fastcgipurge(/.*) {
	    fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
	}

	location ~ ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf|txt|pub|sh)$ {
	access_log off;	log_not_found off; expires 30d;
	}

location ~ /(media|images|cache|tmp|logs)/.*.(php|jsp|pl|py|asp|cgi|sh)$ {
  return 403;
}

location ~ /.well-known {
    # Set correct content type. According to this:
    # https://community.letsencrypt.org/t/using-the-webroot-domain-verification-method/1445/29
    # Current specification requires "text/plain" or no content header at all.
    # It seems that "text/plain" is a safe option.
    #default_type "text/plain";
     #allow all; #TR: Allow only when requesting a cert
    allow all;
    # This directory must be the same as in /etc/letsencrypt/cli.ini
    # as "webroot-path" parameter. Also don't forget to set "authenticator" parameter
    # there to "webroot".
    # Do NOT use alias, use root! Target directory is located here:
    # /var/www/common/letsencrypt/.well-known/acme-challenge/
    #root         /var/www/letsencrypt;
}
#location ~ ^/(wp-admin|wp-login\.php) {
#              allow 47.156.5.137;
#              deny all;
#}


}
